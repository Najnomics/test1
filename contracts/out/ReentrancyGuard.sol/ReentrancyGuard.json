{"abi":[{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"]},\"sources\":{\"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ReentrancyGuardReentrantCall"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/openzeppelin-contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol":"ReentrancyGuard"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236","urls":["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02","dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol","id":47210,"exportedSymbols":{"ReentrancyGuard":[47209]},"nodeType":"SourceUnit","src":"109:3131:33","nodes":[{"id":47142,"nodeType":"PragmaDirective","src":"109:24:33","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":47209,"nodeType":"ContractDefinition","src":"886:2353:33","nodes":[{"id":47146,"nodeType":"VariableDeclaration","src":"1674:40:33","nodes":[],"constant":true,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:33","scope":47209,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47144,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":47145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":47149,"nodeType":"VariableDeclaration","src":"1720:36:33","nodes":[],"constant":true,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:33","scope":47209,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47147,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":47148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:33","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":47151,"nodeType":"VariableDeclaration","src":"1763:23:33","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1779:7:33","scope":47209,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47150,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":47154,"nodeType":"ErrorDefinition","src":"1850:37:33","nodes":[],"documentation":{"id":47152,"nodeType":"StructuredDocumentation","src":"1793:52:33","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:33","parameters":{"id":47153,"nodeType":"ParameterList","parameters":[],"src":"1884:2:33"}},{"id":47162,"nodeType":"FunctionDefinition","src":"1893:52:33","nodes":[],"body":{"id":47161,"nodeType":"Block","src":"1907:38:33","nodes":[],"statements":[{"expression":{"id":47159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":47157,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47151,"src":"1917:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":47158,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47146,"src":"1927:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":47160,"nodeType":"ExpressionStatement","src":"1917:21:33"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":47155,"nodeType":"ParameterList","parameters":[],"src":"1904:2:33"},"returnParameters":{"id":47156,"nodeType":"ParameterList","parameters":[],"src":"1907:0:33"},"scope":47209,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":47173,"nodeType":"ModifierDefinition","src":"2322:103:33","nodes":[],"body":{"id":47172,"nodeType":"Block","src":"2346:79:33","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":47165,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47189,"src":"2356:19:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":47166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":47167,"nodeType":"ExpressionStatement","src":"2356:21:33"},{"id":47168,"nodeType":"PlaceholderStatement","src":"2387:1:33"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":47169,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47197,"src":"2398:18:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":47170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":47171,"nodeType":"ExpressionStatement","src":"2398:20:33"}]},"documentation":{"id":47163,"nodeType":"StructuredDocumentation","src":"1951:366:33","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2331:12:33","parameters":{"id":47164,"nodeType":"ParameterList","parameters":[],"src":"2343:2:33"},"virtual":false,"visibility":"internal"},{"id":47189,"nodeType":"FunctionDefinition","src":"2431:307:33","nodes":[],"body":{"id":47188,"nodeType":"Block","src":"2470:268:33","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":47178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47176,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47151,"src":"2558:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":47177,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47149,"src":"2569:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":47183,"nodeType":"IfStatement","src":"2554:86:33","trueBody":{"id":47182,"nodeType":"Block","src":"2578:62:33","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":47179,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47154,"src":"2599:28:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":47180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":47181,"nodeType":"RevertStatement","src":"2592:37:33"}]}},{"expression":{"id":47186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":47184,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47151,"src":"2714:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":47185,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47149,"src":"2724:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":47187,"nodeType":"ExpressionStatement","src":"2714:17:33"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:33","parameters":{"id":47174,"nodeType":"ParameterList","parameters":[],"src":"2459:2:33"},"returnParameters":{"id":47175,"nodeType":"ParameterList","parameters":[],"src":"2470:0:33"},"scope":47209,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":47197,"nodeType":"FunctionDefinition","src":"2744:208:33","nodes":[],"body":{"id":47196,"nodeType":"Block","src":"2782:170:33","nodes":[],"statements":[{"expression":{"id":47194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":47192,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47151,"src":"2924:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":47193,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47146,"src":"2934:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":47195,"nodeType":"ExpressionStatement","src":"2924:21:33"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:33","parameters":{"id":47190,"nodeType":"ParameterList","parameters":[],"src":"2771:2:33"},"returnParameters":{"id":47191,"nodeType":"ParameterList","parameters":[],"src":"2782:0:33"},"scope":47209,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":47208,"nodeType":"FunctionDefinition","src":"3131:106:33","nodes":[],"body":{"id":47207,"nodeType":"Block","src":"3195:42:33","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":47205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47203,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47151,"src":"3212:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":47204,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47149,"src":"3223:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":47202,"id":47206,"nodeType":"Return","src":"3205:25:33"}]},"documentation":{"id":47198,"nodeType":"StructuredDocumentation","src":"2958:168:33","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:33","parameters":{"id":47199,"nodeType":"ParameterList","parameters":[],"src":"3163:2:33"},"returnParameters":{"id":47202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":47208,"src":"3189:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47200,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:33"},"scope":47209,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":47143,"nodeType":"StructuredDocumentation","src":"135:750:33","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[47209],"name":"ReentrancyGuard","nameLocation":"904:15:33","scope":47210,"usedErrors":[47154],"usedEvents":[]}],"license":"MIT"},"id":33}