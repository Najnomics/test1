{"abi":[{"type":"function","name":"DYNAMIC_FEE_FLAG","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"MAX_LP_FEE","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"OVERRIDE_FEE_FLAG","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"function","name":"REMOVE_OVERRIDE_MASK","inputs":[],"outputs":[{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"view"},{"type":"error","name":"LPFeeTooLarge","inputs":[{"name":"fee","type":"uint24","internalType":"uint24"}]}],"bytecode":{"object":"0x61015961004d600b8282823980515f1a6073146041577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610055575f3560e01c80633b01d64d146100595780633fc48eba146100775780636f95ebcf14610095578063f26ef49d146100b3575b5f80fd5b6100616100d1565b60405161006e919061010a565b60405180910390f35b61007f6100d8565b60405161008c919061010a565b60405180910390f35b61009d6100df565b6040516100aa919061010a565b60405180910390f35b6100bb6100e6565b6040516100c8919061010a565b60405180910390f35b6240000081565b620f424081565b62bfffff81565b6280000081565b5f62ffffff82169050919050565b610104816100ed565b82525050565b5f60208201905061011d5f8301846100fb565b9291505056fea2646970667358221220423c052cfd29a527b2f599fe5f70b71c3edeaa83c9243ce9d7764b3989e83c2d64736f6c634300081a0033","sourceMap":"166:3429:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x7300000000000000000000000000000000000000003014608060405260043610610055575f3560e01c80633b01d64d146100595780633fc48eba146100775780636f95ebcf14610095578063f26ef49d146100b3575b5f80fd5b6100616100d1565b60405161006e919061010a565b60405180910390f35b61007f6100d8565b60405161008c919061010a565b60405180910390f35b61009d6100df565b6040516100aa919061010a565b60405180910390f35b6100bb6100e6565b6040516100c8919061010a565b60405180910390f35b6240000081565b620f424081565b62bfffff81565b6280000081565b5f62ffffff82169050919050565b610104816100ed565b82525050565b5f60208201905061011d5f8301846100fb565b9291505056fea2646970667358221220423c052cfd29a527b2f599fe5f70b71c3edeaa83c9243ce9d7764b3989e83c2d64736f6c634300081a0033","sourceMap":"166:3429:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;776:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1075:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;929:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;510:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;776:51;819:8;776:51;:::o;1075:43::-;1111:7;1075:43;:::o;929:54::-;975:8;929:54;:::o;510:50::-;552:8;510:50;:::o;7:91:97:-;43:7;83:8;76:5;72:20;61:31;;7:91;;;:::o;104:123::-;197:23;214:5;197:23;:::i;:::-;192:3;185:36;104:123;;:::o;233:234::-;332:4;370:2;359:9;355:18;347:26;;383:77;457:1;446:9;442:17;433:6;383:77;:::i;:::-;233:234;;;;:::o","linkReferences":{}},"methodIdentifiers":{"DYNAMIC_FEE_FLAG()":"f26ef49d","MAX_LP_FEE()":"3fc48eba","OVERRIDE_FEE_FLAG()":"3b01d64d","REMOVE_OVERRIDE_MASK()":"6f95ebcf"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"LPFeeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DYNAMIC_FEE_FLAG\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_LP_FEE\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OVERRIDE_FEE_FLAG\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REMOVE_OVERRIDE_MASK\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"LPFeeTooLarge(uint24)\":[{\"notice\":\"Thrown when the static or dynamic fee on a pool exceeds 100%.\"}]},\"kind\":\"user\",\"methods\":{\"DYNAMIC_FEE_FLAG()\":{\"notice\":\"An lp fee of exactly 0b1000000... signals a dynamic fee pool. This isn't a valid static fee as it is > MAX_LP_FEE\"},\"MAX_LP_FEE()\":{\"notice\":\"the lp fee is represented in hundredths of a bip, so the max is 100%\"},\"OVERRIDE_FEE_FLAG()\":{\"notice\":\"the second bit of the fee returned by beforeSwap is used to signal if the stored LP fee should be overridden in this swap\"},\"REMOVE_OVERRIDE_MASK()\":{\"notice\":\"mask to remove the override fee flag from a fee returned by the beforeSwaphook\"}},\"notice\":\"Library of helper functions for a pools LP fee\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol\":\"LPFeeLibrary\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"]},\"sources\":{\"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475\",\"dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"type":"error","name":"LPFeeTooLarge"},{"inputs":[],"stateMutability":"view","type":"function","name":"DYNAMIC_FEE_FLAG","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_LP_FEE","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"OVERRIDE_FEE_FLAG","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"REMOVE_OVERRIDE_MASK","outputs":[{"internalType":"uint24","name":"","type":"uint24"}]}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"DYNAMIC_FEE_FLAG()":{"notice":"An lp fee of exactly 0b1000000... signals a dynamic fee pool. This isn't a valid static fee as it is > MAX_LP_FEE"},"MAX_LP_FEE()":{"notice":"the lp fee is represented in hundredths of a bip, so the max is 100%"},"OVERRIDE_FEE_FLAG()":{"notice":"the second bit of the fee returned by beforeSwap is used to signal if the stored LP fee should be overridden in this swap"},"REMOVE_OVERRIDE_MASK()":{"notice":"mask to remove the override fee flag from a fee returned by the beforeSwaphook"}},"version":1}},"settings":{"remappings":["@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@openzeppelin/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/openzeppelin-contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol":"LPFeeLibrary"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol":{"keccak256":"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de","urls":["bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd","dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol":{"keccak256":"0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b","urls":["bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475","dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol","id":49785,"exportedSymbols":{"CustomRevert":[48463],"LPFeeLibrary":[49784]},"nodeType":"SourceUnit","src":"32:3564:44","nodes":[{"id":49637,"nodeType":"PragmaDirective","src":"32:23:44","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":49639,"nodeType":"ImportDirective","src":"57:48:44","nodes":[],"absolutePath":"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol","file":"./CustomRevert.sol","nameLocation":"-1:-1:-1","scope":49785,"sourceUnit":48464,"symbolAliases":[{"foreign":{"id":49638,"name":"CustomRevert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48463,"src":"65:12:44","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":49784,"nodeType":"ContractDefinition","src":"166:3429:44","nodes":[{"id":49643,"nodeType":"UsingForDirective","src":"193:30:44","nodes":[],"global":false,"libraryName":{"id":49641,"name":"LPFeeLibrary","nameLocations":["199:12:44"],"nodeType":"IdentifierPath","referencedDeclaration":49784,"src":"199:12:44"},"typeName":{"id":49642,"name":"uint24","nodeType":"ElementaryTypeName","src":"216:6:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}},{"id":49646,"nodeType":"UsingForDirective","src":"228:30:44","nodes":[],"global":false,"libraryName":{"id":49644,"name":"CustomRevert","nameLocations":["234:12:44"],"nodeType":"IdentifierPath","referencedDeclaration":48463,"src":"234:12:44"},"typeName":{"id":49645,"name":"bytes4","nodeType":"ElementaryTypeName","src":"251:6:44","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}},{"id":49651,"nodeType":"ErrorDefinition","src":"342:32:44","nodes":[],"documentation":{"id":49647,"nodeType":"StructuredDocumentation","src":"264:73:44","text":"@notice Thrown when the static or dynamic fee on a pool exceeds 100%."},"errorSelector":"14002113","name":"LPFeeTooLarge","nameLocation":"348:13:44","parameters":{"id":49650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49649,"mutability":"mutable","name":"fee","nameLocation":"369:3:44","nodeType":"VariableDeclaration","scope":49651,"src":"362:10:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":49648,"name":"uint24","nodeType":"ElementaryTypeName","src":"362:6:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"361:12:44"}},{"id":49655,"nodeType":"VariableDeclaration","src":"510:50:44","nodes":[],"constant":true,"documentation":{"id":49652,"nodeType":"StructuredDocumentation","src":"380:125:44","text":"@notice An lp fee of exactly 0b1000000... signals a dynamic fee pool. This isn't a valid static fee as it is > MAX_LP_FEE"},"functionSelector":"f26ef49d","mutability":"constant","name":"DYNAMIC_FEE_FLAG","nameLocation":"533:16:44","scope":49784,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":49653,"name":"uint24","nodeType":"ElementaryTypeName","src":"510:6:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"value":{"hexValue":"3078383030303030","id":49654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:8:44","typeDescriptions":{"typeIdentifier":"t_rational_8388608_by_1","typeString":"int_const 8388608"},"value":"0x800000"},"visibility":"public"},{"id":49659,"nodeType":"VariableDeclaration","src":"776:51:44","nodes":[],"constant":true,"documentation":{"id":49656,"nodeType":"StructuredDocumentation","src":"567:133:44","text":"@notice the second bit of the fee returned by beforeSwap is used to signal if the stored LP fee should be overridden in this swap"},"functionSelector":"3b01d64d","mutability":"constant","name":"OVERRIDE_FEE_FLAG","nameLocation":"799:17:44","scope":49784,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":49657,"name":"uint24","nodeType":"ElementaryTypeName","src":"776:6:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"value":{"hexValue":"3078343030303030","id":49658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"819:8:44","typeDescriptions":{"typeIdentifier":"t_rational_4194304_by_1","typeString":"int_const 4194304"},"value":"0x400000"},"visibility":"public"},{"id":49663,"nodeType":"VariableDeclaration","src":"929:54:44","nodes":[],"constant":true,"documentation":{"id":49660,"nodeType":"StructuredDocumentation","src":"834:90:44","text":"@notice mask to remove the override fee flag from a fee returned by the beforeSwaphook"},"functionSelector":"6f95ebcf","mutability":"constant","name":"REMOVE_OVERRIDE_MASK","nameLocation":"952:20:44","scope":49784,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":49661,"name":"uint24","nodeType":"ElementaryTypeName","src":"929:6:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"value":{"hexValue":"3078424646464646","id":49662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"975:8:44","typeDescriptions":{"typeIdentifier":"t_rational_12582911_by_1","typeString":"int_const 12582911"},"value":"0xBFFFFF"},"visibility":"public"},{"id":49667,"nodeType":"VariableDeclaration","src":"1075:43:44","nodes":[],"constant":true,"documentation":{"id":49664,"nodeType":"StructuredDocumentation","src":"990:80:44","text":"@notice the lp fee is represented in hundredths of a bip, so the max is 100%"},"functionSelector":"3fc48eba","mutability":"constant","name":"MAX_LP_FEE","nameLocation":"1098:10:44","scope":49784,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":49665,"name":"uint24","nodeType":"ElementaryTypeName","src":"1075:6:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"value":{"hexValue":"31303030303030","id":49666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1111:7:44","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"visibility":"public"},{"id":49680,"nodeType":"FunctionDefinition","src":"1298:112:44","nodes":[],"body":{"id":49679,"nodeType":"Block","src":"1362:48:44","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":49677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49675,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49670,"src":"1379:4:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":49676,"name":"DYNAMIC_FEE_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49655,"src":"1387:16:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"1379:24:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":49674,"id":49678,"nodeType":"Return","src":"1372:31:44"}]},"documentation":{"id":49668,"nodeType":"StructuredDocumentation","src":"1125:168:44","text":"@notice returns true if a pool's LP fee signals that the pool has a dynamic fee\n @param self The fee to check\n @return bool True of the fee is dynamic"},"implemented":true,"kind":"function","modifiers":[],"name":"isDynamicFee","nameLocation":"1307:12:44","parameters":{"id":49671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49670,"mutability":"mutable","name":"self","nameLocation":"1327:4:44","nodeType":"VariableDeclaration","scope":49680,"src":"1320:11:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":49669,"name":"uint24","nodeType":"ElementaryTypeName","src":"1320:6:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"1319:13:44"},"returnParameters":{"id":49674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":49680,"src":"1356:4:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":49672,"name":"bool","nodeType":"ElementaryTypeName","src":"1356:4:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1355:6:44"},"scope":49784,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":49693,"nodeType":"FunctionDefinition","src":"1591:101:44","nodes":[],"body":{"id":49692,"nodeType":"Block","src":"1650:42:44","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":49690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49688,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49683,"src":"1667:4:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":49689,"name":"MAX_LP_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49667,"src":"1675:10:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"1667:18:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":49687,"id":49691,"nodeType":"Return","src":"1660:25:44"}]},"documentation":{"id":49681,"nodeType":"StructuredDocumentation","src":"1416:170:44","text":"@notice returns true if an LP fee is valid, aka not above the maximum permitted fee\n @param self The fee to check\n @return bool True of the fee is valid"},"implemented":true,"kind":"function","modifiers":[],"name":"isValid","nameLocation":"1600:7:44","parameters":{"id":49684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49683,"mutability":"mutable","name":"self","nameLocation":"1615:4:44","nodeType":"VariableDeclaration","scope":49693,"src":"1608:11:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":49682,"name":"uint24","nodeType":"ElementaryTypeName","src":"1608:6:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"1607:13:44"},"returnParameters":{"id":49687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":49693,"src":"1644:4:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":49685,"name":"bool","nodeType":"ElementaryTypeName","src":"1644:4:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1643:6:44"},"scope":49784,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":49713,"nodeType":"FunctionDefinition","src":"1833:122:44","nodes":[],"body":{"id":49712,"nodeType":"Block","src":"1878:77:44","nodes":[],"statements":[{"condition":{"id":49702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1892:15:44","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":49699,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49696,"src":"1893:4:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":49700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1898:7:44","memberName":"isValid","nodeType":"MemberAccess","referencedDeclaration":49693,"src":"1893:12:44","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint24_$returns$_t_bool_$attached_to$_t_uint24_$","typeString":"function (uint24) pure returns (bool)"}},"id":49701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1893:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":49711,"nodeType":"IfStatement","src":"1888:60:44","trueBody":{"expression":{"arguments":[{"id":49708,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49696,"src":"1943:4:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"expression":{"id":49703,"name":"LPFeeTooLarge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49651,"src":"1909:13:44","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint24_$returns$_t_error_$","typeString":"function (uint24) pure returns (error)"}},"id":49706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1923:8:44","memberName":"selector","nodeType":"MemberAccess","src":"1909:22:44","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":49707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1932:10:44","memberName":"revertWith","nodeType":"MemberAccess","referencedDeclaration":48409,"src":"1909:33:44","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$_t_uint160_$returns$__$attached_to$_t_bytes4_$","typeString":"function (bytes4,uint160) pure"}},"id":49709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1909:39:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49710,"nodeType":"ExpressionStatement","src":"1909:39:44"}}]},"documentation":{"id":49694,"nodeType":"StructuredDocumentation","src":"1698:130:44","text":"@notice validates whether an LP fee is larger than the maximum, and reverts if invalid\n @param self The fee to validate"},"implemented":true,"kind":"function","modifiers":[],"name":"validate","nameLocation":"1842:8:44","parameters":{"id":49697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49696,"mutability":"mutable","name":"self","nameLocation":"1858:4:44","nodeType":"VariableDeclaration","scope":49713,"src":"1851:11:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":49695,"name":"uint24","nodeType":"ElementaryTypeName","src":"1851:6:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"1850:13:44"},"returnParameters":{"id":49698,"nodeType":"ParameterList","parameters":[],"src":"1878:0:44"},"scope":49784,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":49735,"nodeType":"FunctionDefinition","src":"2333:220:44","nodes":[],"body":{"id":49734,"nodeType":"Block","src":"2402:151:44","nodes":[],"statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":49721,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49716,"src":"2471:4:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":49722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2476:12:44","memberName":"isDynamicFee","nodeType":"MemberAccess","referencedDeclaration":49680,"src":"2471:17:44","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint24_$returns$_t_bool_$attached_to$_t_uint24_$","typeString":"function (uint24) pure returns (bool)"}},"id":49723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2471:19:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":49726,"nodeType":"IfStatement","src":"2467:33:44","trueBody":{"expression":{"hexValue":"30","id":49724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2499:1:44","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":49720,"id":49725,"nodeType":"Return","src":"2492:8:44"}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":49727,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49716,"src":"2510:4:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":49729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:8:44","memberName":"validate","nodeType":"MemberAccess","referencedDeclaration":49713,"src":"2510:13:44","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint24_$returns$__$attached_to$_t_uint24_$","typeString":"function (uint24) pure"}},"id":49730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2510:15:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49731,"nodeType":"ExpressionStatement","src":"2510:15:44"},{"expression":{"id":49732,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49716,"src":"2542:4:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":49720,"id":49733,"nodeType":"Return","src":"2535:11:44"}]},"documentation":{"id":49714,"nodeType":"StructuredDocumentation","src":"1961:367:44","text":"@notice gets and validates the initial LP fee for a pool. Dynamic fee pools have an initial fee of 0.\n @dev if a dynamic fee pool wants a non-0 initial fee, it should call `updateDynamicLPFee` in the afterInitialize hook\n @param self The fee to get the initial LP from\n @return initialFee 0 if the fee is dynamic, otherwise the fee (if valid)"},"implemented":true,"kind":"function","modifiers":[],"name":"getInitialLPFee","nameLocation":"2342:15:44","parameters":{"id":49717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49716,"mutability":"mutable","name":"self","nameLocation":"2365:4:44","nodeType":"VariableDeclaration","scope":49735,"src":"2358:11:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":49715,"name":"uint24","nodeType":"ElementaryTypeName","src":"2358:6:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2357:13:44"},"returnParameters":{"id":49720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":49735,"src":"2394:6:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":49718,"name":"uint24","nodeType":"ElementaryTypeName","src":"2394:6:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2393:8:44"},"scope":49784,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":49750,"nodeType":"FunctionDefinition","src":"2757:115:44","nodes":[],"body":{"id":49749,"nodeType":"Block","src":"2819:53:44","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":49747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":49745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49743,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49738,"src":"2836:4:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":49744,"name":"OVERRIDE_FEE_FLAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49659,"src":"2843:17:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"2836:24:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":49746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2864:1:44","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2836:29:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":49742,"id":49748,"nodeType":"Return","src":"2829:36:44"}]},"documentation":{"id":49736,"nodeType":"StructuredDocumentation","src":"2559:193:44","text":"@notice returns true if the fee has the override flag set (2nd highest bit of the uint24)\n @param self The fee to check\n @return bool True of the fee has the override flag set"},"implemented":true,"kind":"function","modifiers":[],"name":"isOverride","nameLocation":"2766:10:44","parameters":{"id":49739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49738,"mutability":"mutable","name":"self","nameLocation":"2784:4:44","nodeType":"VariableDeclaration","scope":49750,"src":"2777:11:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":49737,"name":"uint24","nodeType":"ElementaryTypeName","src":"2777:6:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2776:13:44"},"returnParameters":{"id":49742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":49750,"src":"2813:4:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":49740,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2812:6:44"},"scope":49784,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":49763,"nodeType":"FunctionDefinition","src":"3058:123:44","nodes":[],"body":{"id":49762,"nodeType":"Block","src":"3130:51:44","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":49760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49758,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49753,"src":"3147:4:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":49759,"name":"REMOVE_OVERRIDE_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49663,"src":"3154:20:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"3147:27:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":49757,"id":49761,"nodeType":"Return","src":"3140:34:44"}]},"documentation":{"id":49751,"nodeType":"StructuredDocumentation","src":"2878:175:44","text":"@notice returns a fee with the override flag removed\n @param self The fee to remove the override flag from\n @return fee The fee without the override flag set"},"implemented":true,"kind":"function","modifiers":[],"name":"removeOverrideFlag","nameLocation":"3067:18:44","parameters":{"id":49754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49753,"mutability":"mutable","name":"self","nameLocation":"3093:4:44","nodeType":"VariableDeclaration","scope":49763,"src":"3086:11:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":49752,"name":"uint24","nodeType":"ElementaryTypeName","src":"3086:6:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3085:13:44"},"returnParameters":{"id":49757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":49763,"src":"3122:6:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":49755,"name":"uint24","nodeType":"ElementaryTypeName","src":"3122:6:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3121:8:44"},"scope":49784,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":49783,"nodeType":"FunctionDefinition","src":"3434:159:44","nodes":[],"body":{"id":49782,"nodeType":"Block","src":"3521:72:44","nodes":[],"statements":[{"expression":{"id":49775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":49771,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49769,"src":"3531:3:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":49772,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49766,"src":"3537:4:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":49773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3542:18:44","memberName":"removeOverrideFlag","nodeType":"MemberAccess","referencedDeclaration":49763,"src":"3537:23:44","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint24_$returns$_t_uint24_$attached_to$_t_uint24_$","typeString":"function (uint24) pure returns (uint24)"}},"id":49774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3537:25:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"3531:31:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":49776,"nodeType":"ExpressionStatement","src":"3531:31:44"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":49777,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49769,"src":"3572:3:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":49779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3576:8:44","memberName":"validate","nodeType":"MemberAccess","referencedDeclaration":49713,"src":"3572:12:44","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint24_$returns$__$attached_to$_t_uint24_$","typeString":"function (uint24) pure"}},"id":49780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:14:44","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49781,"nodeType":"ExpressionStatement","src":"3572:14:44"}]},"documentation":{"id":49764,"nodeType":"StructuredDocumentation","src":"3187:242:44","text":"@notice Removes the override flag and validates the fee (reverts if the fee is too large)\n @param self The fee to remove the override flag from, and then validate\n @return fee The fee without the override flag set (if valid)"},"implemented":true,"kind":"function","modifiers":[],"name":"removeOverrideFlagAndValidate","nameLocation":"3443:29:44","parameters":{"id":49767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49766,"mutability":"mutable","name":"self","nameLocation":"3480:4:44","nodeType":"VariableDeclaration","scope":49783,"src":"3473:11:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":49765,"name":"uint24","nodeType":"ElementaryTypeName","src":"3473:6:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3472:13:44"},"returnParameters":{"id":49770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49769,"mutability":"mutable","name":"fee","nameLocation":"3516:3:44","nodeType":"VariableDeclaration","scope":49783,"src":"3509:10:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":49768,"name":"uint24","nodeType":"ElementaryTypeName","src":"3509:6:44","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3508:12:44"},"scope":49784,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"LPFeeLibrary","contractDependencies":[],"contractKind":"library","documentation":{"id":49640,"nodeType":"StructuredDocumentation","src":"107:59:44","text":"@notice Library of helper functions for a pools LP fee"},"fullyImplemented":true,"linearizedBaseContracts":[49784],"name":"LPFeeLibrary","nameLocation":"174:12:44","scope":49785,"usedErrors":[49651],"usedEvents":[]}],"license":"MIT"},"id":44}